openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /Gestionutilisateur/updateUtilisateur/{nom}:
    put:
      tags:
      - utilisateur-controller
      operationId: updateUtilisateur
      parameters:
      - name: nom
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Utilisateur"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /Gestionutilisateur/login:
    post:
      tags:
      - utilisateur-controller
      operationId: authenticateUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /Gestionutilisateur/addUtilisateur:
    post:
      tags:
      - utilisateur-controller
      operationId: createUtilisateur
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Utilisateur"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /Gestionutilisateur/getOneUtilisatuer/{nom}:
    get:
      tags:
      - utilisateur-controller
      operationId: getUtilisateurByNom
      parameters:
      - name: nom
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /Gestionutilisateur/getAllUtilisateur:
    get:
      tags:
      - utilisateur-controller
      operationId: getAllUtilisateurs
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Utilisateur"
  /Gestionutilisateur/deleteOneUtilisateur/{nom}:
    delete:
      tags:
      - utilisateur-controller
      operationId: deleteUtilisateur
      parameters:
      - name: nom
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
components:
  schemas:
    Utilisateur:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nom:
          maxLength: 50
          minLength: 2
          type: string
        email:
          type: string
        password:
          maxLength: 16
          minLength: 8
          type: string
